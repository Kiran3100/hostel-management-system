"""initial schema

Revision ID: f051838a9431
Revises: 
Create Date: 2025-10-05 19:32:25.074973

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f051838a9431'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hostels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('pincode', sa.String(length=10), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index('idx_hostels_code', 'hostels', ['code'], unique=False)
    op.create_index('idx_hostels_is_active', 'hostels', ['is_active'], unique=False)
    op.create_index(op.f('ix_hostels_id'), 'hostels', ['id'], unique=False)
    op.create_table('otp_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('code_hash', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_otp_codes_phone', 'otp_codes', ['phone'], unique=False)
    op.create_index(op.f('ix_otp_codes_id'), 'otp_codes', ['id'], unique=False)
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('tier', sa.Enum('FREE', 'STANDARD', 'PREMIUM', name='plantier'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('max_hostels', sa.Integer(), nullable=True),
    sa.Column('max_tenants_per_hostel', sa.Integer(), nullable=True),
    sa.Column('max_rooms_per_hostel', sa.Integer(), nullable=True),
    sa.Column('max_admins_per_hostel', sa.Integer(), nullable=True),
    sa.Column('max_storage_mb', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tier')
    )
    op.create_index(op.f('ix_plans_id'), 'plans', ['id'], unique=False)
    op.create_table('fee_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('frequency', sa.Enum('MONTHLY', 'QUARTERLY', 'HALF_YEARLY', 'YEARLY', 'ONE_TIME', name='feefrequency'), nullable=False),
    sa.Column('due_day', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fee_schedules_hostel_id', 'fee_schedules', ['hostel_id'], unique=False)
    op.create_index(op.f('ix_fee_schedules_id'), 'fee_schedules', ['id'], unique=False)
    op.create_table('mess_menus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('meal_type', sa.Enum('BREAKFAST', 'LUNCH', 'SNACKS', 'DINNER', name='meal_type_enum'), nullable=False),
    sa.Column('items', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mess_menus_date', 'mess_menus', ['date'], unique=False)
    op.create_index('idx_mess_menus_hostel_date_meal', 'mess_menus', ['hostel_id', 'date', 'meal_type'], unique=True)
    op.create_index('idx_mess_menus_hostel_id', 'mess_menus', ['hostel_id'], unique=False)
    op.create_index(op.f('ix_mess_menus_id'), 'mess_menus', ['id'], unique=False)
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('room_type', sa.Enum('SINGLE', 'DOUBLE', 'TRIPLE', 'DORMITORY', name='roomtype'), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_rooms_hostel_id', 'rooms', ['hostel_id'], unique=False)
    op.create_index('idx_rooms_hostel_number', 'rooms', ['hostel_id', 'number'], unique=True)
    op.create_index(op.f('ix_rooms_id'), 'rooms', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'CANCELLED', 'TRIAL', name='subscriptionstatus'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hostel_id')
    )
    op.create_index('idx_subscriptions_hostel_id', 'subscriptions', ['hostel_id'], unique=False)
    op.create_index('idx_subscriptions_status', 'subscriptions', ['status'], unique=False)
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Enum('SUPER_ADMIN', 'HOSTEL_ADMIN', 'TENANT', name='userrole'), nullable=False),
    sa.Column('primary_hostel_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['primary_hostel_id'], ['hostels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone')
    )
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_phone', 'users', ['phone'], unique=False)
    op.create_index('idx_users_primary_hostel_id', 'users', ['primary_hostel_id'], unique=False)
    op.create_index('idx_users_role', 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.String(length=100), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_attachments_entity', 'attachments', ['entity_type', 'entity_id'], unique=False)
    op.create_index('idx_attachments_hostel_id', 'attachments', ['hostel_id'], unique=False)
    op.create_index('idx_attachments_uploaded_by', 'attachments', ['uploaded_by'], unique=False)
    op.create_index(op.f('ix_attachments_id'), 'attachments', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('hostel_id', sa.Integer(), nullable=True),
    sa.Column('entity_type', sa.String(length=100), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'PAYMENT', name='auditaction'), nullable=False),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_logs_entity', 'audit_logs', ['entity_type', 'entity_id'], unique=False)
    op.create_index('idx_audit_logs_hostel_id', 'audit_logs', ['hostel_id'], unique=False)
    op.create_index('idx_audit_logs_user_id', 'audit_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('device_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('platform', sa.Enum('IOS', 'ANDROID', 'WEB', name='platform'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_device_tokens_token', 'device_tokens', ['token'], unique=True)
    op.create_index('idx_device_tokens_user_id', 'device_tokens', ['user_id'], unique=False)
    op.create_index(op.f('ix_device_tokens_id'), 'device_tokens', ['id'], unique=False)
    op.create_table('notices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='noticepriority'), nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notices_hostel_id', 'notices', ['hostel_id'], unique=False)
    op.create_index('idx_notices_published_at', 'notices', ['published_at'], unique=False)
    op.create_index(op.f('ix_notices_id'), 'notices', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_type', sa.Enum('INFO', 'WARNING', 'ERROR', 'SUCCESS', name='notificationtype'), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notifications_is_read', 'notifications', ['is_read'], unique=False)
    op.create_index('idx_notifications_user_id', 'notifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token_hash')
    )
    op.create_index('idx_refresh_tokens_user_id', 'refresh_tokens', ['user_id'], unique=False)
    op.create_index(op.f('ix_refresh_tokens_id'), 'refresh_tokens', ['id'], unique=False)
    op.create_table('support_tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='ticketpriority'), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', name='ticketstatus'), nullable=False),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_support_tickets_hostel_id', 'support_tickets', ['hostel_id'], unique=False)
    op.create_index('idx_support_tickets_status', 'support_tickets', ['status'], unique=False)
    op.create_index(op.f('ix_support_tickets_id'), 'support_tickets', ['id'], unique=False)
    op.create_table('tenant_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('id_proof_type', sa.String(length=50), nullable=True),
    sa.Column('id_proof_number', sa.String(length=100), nullable=True),
    sa.Column('id_proof_url', sa.String(length=500), nullable=True),
    sa.Column('guardian_name', sa.String(length=255), nullable=True),
    sa.Column('guardian_phone', sa.String(length=20), nullable=True),
    sa.Column('guardian_email', sa.String(length=255), nullable=True),
    sa.Column('emergency_contact', sa.String(length=20), nullable=True),
    sa.Column('check_in_date', sa.Date(), nullable=True),
    sa.Column('check_out_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('idx_tenant_profiles_hostel_id', 'tenant_profiles', ['hostel_id'], unique=False)
    op.create_index('idx_tenant_profiles_user_id', 'tenant_profiles', ['user_id'], unique=False)
    op.create_index(op.f('ix_tenant_profiles_id'), 'tenant_profiles', ['id'], unique=False)
    op.create_table('user_hostel_association',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'hostel_id')
    )
    op.create_table('beds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=10), nullable=False),
    sa.Column('is_occupied', sa.Boolean(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_beds_hostel_id', 'beds', ['hostel_id'], unique=False)
    op.create_index('idx_beds_room_id', 'beds', ['room_id'], unique=False)
    op.create_index('idx_beds_tenant_id', 'beds', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_beds_id'), 'beds', ['id'], unique=False)
    op.create_table('complaints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('MAINTENANCE', 'CLEANLINESS', 'FOOD', 'ELECTRICITY', 'WATER', 'SECURITY', 'OTHER', name='complaintcategory'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='complaintpriority'), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', 'REJECTED', name='complaintstatus'), nullable=False),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_complaints_hostel_id', 'complaints', ['hostel_id'], unique=False)
    op.create_index('idx_complaints_status', 'complaints', ['status'], unique=False)
    op.create_index('idx_complaints_tenant_id', 'complaints', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_complaints_id'), 'complaints', ['id'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('fee_schedule_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'PARTIAL', 'OVERDUE', 'CANCELLED', name='invoicestatus'), nullable=False),
    sa.Column('paid_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['fee_schedule_id'], ['fee_schedules.id'], ),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant_profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_index('idx_invoices_due_date', 'invoices', ['due_date'], unique=False)
    op.create_index('idx_invoices_hostel_id', 'invoices', ['hostel_id'], unique=False)
    op.create_index('idx_invoices_status', 'invoices', ['status'], unique=False)
    op.create_index('idx_invoices_tenant_id', 'invoices', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.create_table('leave_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'CANCELLED', name='leavestatus'), nullable=False),
    sa.Column('approver_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approver_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['approver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_leave_applications_hostel_id', 'leave_applications', ['hostel_id'], unique=False)
    op.create_index('idx_leave_applications_status', 'leave_applications', ['status'], unique=False)
    op.create_index('idx_leave_applications_tenant_id', 'leave_applications', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_leave_applications_id'), 'leave_applications', ['id'], unique=False)
    op.create_table('check_in_outs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('bed_id', sa.Integer(), nullable=False),
    sa.Column('check_in_date', sa.Date(), nullable=False),
    sa.Column('check_out_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('CHECKED_IN', 'CHECKED_OUT', name='checkinoutstatus'), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bed_id'], ['beds.id'], ),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_check_in_outs_hostel_id', 'check_in_outs', ['hostel_id'], unique=False)
    op.create_index('idx_check_in_outs_tenant_id', 'check_in_outs', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_check_in_outs_id'), 'check_in_outs', ['id'], unique=False)
    op.create_table('complaint_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('complaint_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaints.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_complaint_comments_complaint_id', 'complaint_comments', ['complaint_id'], unique=False)
    op.create_index(op.f('ix_complaint_comments_id'), 'complaint_comments', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('hostel_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'SUCCESS', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('gateway', sa.String(length=50), nullable=False),
    sa.Column('transaction_id', sa.String(length=255), nullable=True),
    sa.Column('idempotency_key', sa.String(length=255), nullable=False),
    sa.Column('receipt_url', sa.String(length=500), nullable=True),
    sa.Column('receipt_number', sa.String(length=50), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_metadata', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hostel_id'], ['hostels.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant_profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('idempotency_key')
    )
    op.create_index('idx_payments_created_at', 'payments', ['created_at'], unique=False)
    op.create_index('idx_payments_hostel_id', 'payments', ['hostel_id'], unique=False)
    op.create_index('idx_payments_idempotency_key', 'payments', ['idempotency_key'], unique=False)
    op.create_index('idx_payments_invoice_id', 'payments', ['invoice_id'], unique=False)
    op.create_index('idx_payments_status', 'payments', ['status'], unique=False)
    op.create_index('idx_payments_tenant_id', 'payments', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_index('idx_payments_tenant_id', table_name='payments')
    op.drop_index('idx_payments_status', table_name='payments')
    op.drop_index('idx_payments_invoice_id', table_name='payments')
    op.drop_index('idx_payments_idempotency_key', table_name='payments')
    op.drop_index('idx_payments_hostel_id', table_name='payments')
    op.drop_index('idx_payments_created_at', table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_complaint_comments_id'), table_name='complaint_comments')
    op.drop_index('idx_complaint_comments_complaint_id', table_name='complaint_comments')
    op.drop_table('complaint_comments')
    op.drop_index(op.f('ix_check_in_outs_id'), table_name='check_in_outs')
    op.drop_index('idx_check_in_outs_tenant_id', table_name='check_in_outs')
    op.drop_index('idx_check_in_outs_hostel_id', table_name='check_in_outs')
    op.drop_table('check_in_outs')
    op.drop_index(op.f('ix_leave_applications_id'), table_name='leave_applications')
    op.drop_index('idx_leave_applications_tenant_id', table_name='leave_applications')
    op.drop_index('idx_leave_applications_status', table_name='leave_applications')
    op.drop_index('idx_leave_applications_hostel_id', table_name='leave_applications')
    op.drop_table('leave_applications')
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.drop_index('idx_invoices_tenant_id', table_name='invoices')
    op.drop_index('idx_invoices_status', table_name='invoices')
    op.drop_index('idx_invoices_hostel_id', table_name='invoices')
    op.drop_index('idx_invoices_due_date', table_name='invoices')
    op.drop_table('invoices')
    op.drop_index(op.f('ix_complaints_id'), table_name='complaints')
    op.drop_index('idx_complaints_tenant_id', table_name='complaints')
    op.drop_index('idx_complaints_status', table_name='complaints')
    op.drop_index('idx_complaints_hostel_id', table_name='complaints')
    op.drop_table('complaints')
    op.drop_index(op.f('ix_beds_id'), table_name='beds')
    op.drop_index('idx_beds_tenant_id', table_name='beds')
    op.drop_index('idx_beds_room_id', table_name='beds')
    op.drop_index('idx_beds_hostel_id', table_name='beds')
    op.drop_table('beds')
    op.drop_table('user_hostel_association')
    op.drop_index(op.f('ix_tenant_profiles_id'), table_name='tenant_profiles')
    op.drop_index('idx_tenant_profiles_user_id', table_name='tenant_profiles')
    op.drop_index('idx_tenant_profiles_hostel_id', table_name='tenant_profiles')
    op.drop_table('tenant_profiles')
    op.drop_index(op.f('ix_support_tickets_id'), table_name='support_tickets')
    op.drop_index('idx_support_tickets_status', table_name='support_tickets')
    op.drop_index('idx_support_tickets_hostel_id', table_name='support_tickets')
    op.drop_table('support_tickets')
    op.drop_index(op.f('ix_refresh_tokens_id'), table_name='refresh_tokens')
    op.drop_index('idx_refresh_tokens_user_id', table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_index('idx_notifications_user_id', table_name='notifications')
    op.drop_index('idx_notifications_is_read', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_notices_id'), table_name='notices')
    op.drop_index('idx_notices_published_at', table_name='notices')
    op.drop_index('idx_notices_hostel_id', table_name='notices')
    op.drop_table('notices')
    op.drop_index(op.f('ix_device_tokens_id'), table_name='device_tokens')
    op.drop_index('idx_device_tokens_user_id', table_name='device_tokens')
    op.drop_index('idx_device_tokens_token', table_name='device_tokens')
    op.drop_table('device_tokens')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index('idx_audit_logs_user_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_hostel_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_entity', table_name='audit_logs')
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_attachments_id'), table_name='attachments')
    op.drop_index('idx_attachments_uploaded_by', table_name='attachments')
    op.drop_index('idx_attachments_hostel_id', table_name='attachments')
    op.drop_index('idx_attachments_entity', table_name='attachments')
    op.drop_table('attachments')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index('idx_users_role', table_name='users')
    op.drop_index('idx_users_primary_hostel_id', table_name='users')
    op.drop_index('idx_users_phone', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_index('idx_subscriptions_status', table_name='subscriptions')
    op.drop_index('idx_subscriptions_hostel_id', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_rooms_id'), table_name='rooms')
    op.drop_index('idx_rooms_hostel_number', table_name='rooms')
    op.drop_index('idx_rooms_hostel_id', table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_mess_menus_id'), table_name='mess_menus')
    op.drop_index('idx_mess_menus_hostel_id', table_name='mess_menus')
    op.drop_index('idx_mess_menus_hostel_date_meal', table_name='mess_menus')
    op.drop_index('idx_mess_menus_date', table_name='mess_menus')
    op.drop_table('mess_menus')
    op.drop_index(op.f('ix_fee_schedules_id'), table_name='fee_schedules')
    op.drop_index('idx_fee_schedules_hostel_id', table_name='fee_schedules')
    op.drop_table('fee_schedules')
    op.drop_index(op.f('ix_plans_id'), table_name='plans')
    op.drop_table('plans')
    op.drop_index(op.f('ix_otp_codes_id'), table_name='otp_codes')
    op.drop_index('idx_otp_codes_phone', table_name='otp_codes')
    op.drop_table('otp_codes')
    op.drop_index(op.f('ix_hostels_id'), table_name='hostels')
    op.drop_index('idx_hostels_is_active', table_name='hostels')
    op.drop_index('idx_hostels_code', table_name='hostels')
    op.drop_table('hostels')
    # ### end Alembic commands ###